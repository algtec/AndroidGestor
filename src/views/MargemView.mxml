<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:projetos="services.projetos.*"
		gestureZoom="view1_gestureZoomHandler(event)"
		gestureSwipe="view1_gestureSwipeHandler(event)"
		title="Margem">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			
			import spark.events.ViewNavigatorEvent;
			protected var lastX:Number = 0;
			[Bindable] public var tamanho:Number;
			[Bindable] public var tela:Number;
			
			
			
			/*protected function view1_initializeHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				addEventListener(TransformGestureEvent.GESTURE_ZOOM, view1_gestureZoomHandler);
			}
			
			protected function view1_viewActivateHandler(event:ViewNavigatorEvent):void
			{
				// TODO Auto-generated method stub
				this.addEventListener(TransformGestureEvent.GESTURE_SWIPE,swipeHandler);
			}
			
			protected function swipeHandler(event:TransformGestureEvent):void {
				// if I specifically swiped the TextArea
				if (event.currentTarget.id ==  "swipeText") {
					
				}
				var myGrafh:ColumnChart = columnchart1 as ColumnChart;
				if (event.offsetX == 1) {
					swipeDirection.text =  "swiped right";
					
				}
				else if (event.offsetX == -1) {
					swipeDirection.text =  "swiped left";
				}
				else if (event.offsetY == 1) {
					swipeDirection.text =  "swiped down";
				}
				else if (event.offsetY == -1) {
					swipeDirection.text =  "swiped up";
				}
			}*/
			protected function columnchart1_creationCompleteHandler(event:FlexEvent):void
			{
				getDataResult.token = projetos.getData();
				tamanho = ProjetosView.dados.length;
				tela = FlexGlobals.topLevelApplication.applicationDPI;
				columnchart1.width = tela * tamanho;
				
			}
			
			
			
			/*scale test*/
			protected function view1_gestureZoomHandler(event:TransformGestureEvent):void
			{
				var tamanhoAntigo:Number = columnchart1.width;
				// TODO Auto-generated method stub
				var myGrafh:ColumnChart = columnchart1 as ColumnChart;
				if(columnchart1.width <= tamanhoAntigo){
					//myGrafh.scaleX *= event.scaleX;
					columnchart1.width = columnchart1.width * event.scaleX;
				}
				else{
					columnchart1.width = tamanhoAntigo;
				}
			}
			
						
			
			
			
			
			protected function view1_gestureSwipeHandler(event:TransformGestureEvent):void
			{
				// TODO Auto-generated method stub
				//posicao.text = event.offsetX.toString();
				if(event.offsetX == -1){
					columnchart1.dataProvider.addItem(columnchart1.dataProvider.removeItemAt(0));
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:CallResponder id="getDataResult"/>
		<projetos:Projetos id="projetos"/>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<mx:ColumnChart id="columnchart1" left="10" top="10" bottom="30"
					creationComplete="columnchart1_creationCompleteHandler(event)"
					dataProvider="{ProjetosView.dados}" showDataTips="true" type="clustered">
		<mx:horizontalAxis>
			<mx:CategoryAxis id="categoryAxis" categoryField="name"/>
		</mx:horizontalAxis>
		<mx:series >
			<mx:ColumnSeries id="columnSeries" displayName="Projeto" yField="margem" itemRenderer="utils.ColorColumnChartRenderer" />
		</mx:series>
	</mx:ColumnChart>
	<mx:Legend left="10" bottom="10" dataProvider="{columnchart1}"/>
</s:View>
