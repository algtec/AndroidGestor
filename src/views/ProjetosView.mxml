<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:projetos="services.projetos.*" title="Projetos">
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			import valueObjects.Node;
			
			
			protected function dataGrid_creationCompleteHandler(event:FlexEvent):void
			{
				getDataResult.token = projetos.getData();
				
			}
			
			protected function toPorcentagem(e:Number):String
			{
				var decimalValue:Number;
				var percentage:Number;
				var roundedPercentage:Number;
				var percentAsString:String;
				
				decimalValue = e;
				percentage = decimalValue * 100;
				roundedPercentage = Math.round(percentage);
				percentAsString = roundedPercentage + "%";
				return percentAsString;
			}
			
			protected function getDataResult_resultHandler(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
				for each(var objeto:valueObjects.Node in event.result){
					objeto["porcentagem"] = toPorcentagem(objeto["porcentagem"]);
					switch(objeto["status"]){
						case "A":
							objeto["status"] = "../assets/nav_plain_green.png";
							break;
						case "B":
							objeto["status"] = "../assets/nav_plain_yellow.png";
							break;
						case "C":
							objeto["status"] = "../assets/nav_plain_red.png";
							break;
						default:
							objeto["status"] = "../assets/nav_plain_blue.png";
							break;
					}
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:CallResponder id="getDataResult" result="getDataResult_resultHandler(event)"/>
		<projetos:Projetos id="projetos"/>
	</fx:Declarations>
	
	
	<s:DataGrid id="dataGrid" left="0" right="0" top="0" bottom="0"
				creationComplete="dataGrid_creationCompleteHandler(event)" requestedColumnCount="-1"
				requestedRowCount="-1" styleName="dataGrid" variableRowHeight="true">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn dataField="status" headerText="Status" itemRenderer="renders.StatusProjeto"/>
				<s:GridColumn dataField="name" headerText="Projeto"/>
				<s:GridColumn dataField="porcentagem" headerText="Porcentagem"/>
			</s:ArrayList>
		</s:columns>
		<s:ArrayCollection id="listaResultados" list="{getDataResult.lastResult}"/>
	</s:DataGrid>
</s:View>
